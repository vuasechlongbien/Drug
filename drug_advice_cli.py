import pyodbc

# 1. Chu·ªói k·∫øt n·ªëi
try:
    conn = pyodbc.connect(
        "DRIVER={SQL Server};"
        "SERVER=DESKTOP-JPU330S\\SQLEXPRESS;"
        "DATABASE=PHARMACY;"
        "Trusted_Connection=yes;"
    )
    cursor = conn.cursor()
except pyodbc.Error as e:
    print(f"L·ªói k·∫øt n·ªëi: {e}")
    exit()

# 2. Nh·∫≠p t√™n thu·ªëc
input_drugs = input("Nh·∫≠p t√™n thu·ªëc (ph√¢n t√°ch b·ªüi d·∫•u ph·∫©y): ")
drug_names = [name.strip() for name in input_drugs.split(',')]

# 3. L·∫•y th√¥ng tin t·ª´ng thu·ªëc t·ª´ b·∫£ng Prescriptions
print("\nüîç Th√¥ng tin thu·ªëc:")
prescription_ids = []
for name in drug_names:
    try:
        query = """
            SELECT prescription_id, name, effects, dosage, side_effects, instructions
            FROM Prescriptions
            WHERE name = ?
        """
        print(f"Th·ª±c thi truy v·∫•n: {query.replace('?', f"'{name}'")}")
        cursor.execute(query, name)
        row = cursor.fetchone()
        if row:
            prescription_ids.append(row.prescription_id)
            # T√°ch effects th√†nh nhi·ªÅu d√≤ng n·∫øu c√≥ k√Ω t·ª± |
            effect_lines = row.effects.split('|') if row.effects else ['']
            print(f"\nüíä T√™n thu·ªëc: {row.name}")
            print(f"üåü C√¥ng d·ª•ng: {effect_lines[0]}")  # D√≤ng ƒë·∫ßu ti√™n c·ªßa effects
            if len(effect_lines) > 1:
                print(f"üìã Ch·ªâ ƒë·ªãnh: {effect_lines[1]}")  # D√≤ng th·ª© hai c·ªßa effects (n·∫øu c√≥)
            print(f"üí° Li·ªÅu d√πng: {row.dosage}")  # Li·ªÅu d√πng
            print(f"‚ö†Ô∏è T√°c d·ª•ng ph·ª•: {row.side_effects}")  # T√°c d·ª•ng ph·ª•
            if row.instructions:  # Hi·ªÉn th·ªã instructions n·∫øu c√≥
                print(f"üìú H∆∞·ªõng d·∫´n: {row.instructions}")
            print(f"üíä T√™n thu·ªëc: {row.name}")  # L·∫∑p l·∫°i name ·ªü cu·ªëi
        else:
            print(f"\n‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th√¥ng tin cho thu·ªëc: {name}")
    except pyodbc.Error as e:
        print(f"L·ªói truy v·∫•n thu·ªëc {name}: {e}")

# 4. Ki·ªÉm tra t∆∞∆°ng t√°c thu·ªëc
print("\n‚ö†Ô∏è T∆∞∆°ng t√°c ph√°t hi·ªán:")
interactions_found = False
if prescription_ids:
    # L·∫•y drug_id t∆∞∆°ng ·ª©ng t·ª´ b·∫£ng Drug
    drug_id_map = {}
    for prescription_id in prescription_ids:
        cursor.execute("SELECT drug_id FROM Drug WHERE drug_name = (SELECT name FROM Prescriptions WHERE prescription_id = ?)", prescription_id)
        drug_id_row = cursor.fetchone()
        if drug_id_row:
            drug_id_map[prescription_id] = drug_id_row[0]

    # Ki·ªÉm tra t∆∞∆°ng t√°c
    for i in range(len(prescription_ids)):
        for j in range(i + 1, len(prescription_ids)):
            drug_id_1 = drug_id_map.get(prescription_ids[i])
            drug_id_2 = drug_id_map.get(prescription_ids[j])
            if drug_id_1 and drug_id_2 and drug_id_1 < drug_id_2:  # ƒê√°p ·ª©ng CHECK (drug_id_1 < drug_id_2)
                try:
                    cursor.execute("""
                        SELECT interaction_description, severity
                        FROM Drug_interaction
                        WHERE (drug_id_1 = ? AND drug_id_2 = ?)
                    """, (drug_id_1, drug_id_2))
                    for row in cursor.fetchall():
                        interactions_found = True
                        print(f"- {row.interaction_description} (**{row.severity}**)")
                except pyodbc.Error as e:
                    print(f"L·ªói ki·ªÉm tra t∆∞∆°ng t√°c gi·ªØa {drug_id_1} v√† {drug_id_2}: {e}")

if not interactions_found:
    print("‚úÖ Kh√¥ng ph√°t hi·ªán t∆∞∆°ng t√°c nguy hi·ªÉm gi·ªØa c√°c thu·ªëc ƒë√£ nh·∫≠p.")

# 5. ƒê√≥ng k·∫øt n·ªëi
conn.close()